{"version":3,"sources":["utils/propTypes.js","components/Typography.js","components/Page.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Badge.js","pages/BadgePage.js"],"names":["__webpack_exports__","Object","F_Working_place_Gurjeet_react_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","F_Working_place_Gurjeet_react_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","F_Working_place_Gurjeet_react_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","F_Working_place_Gurjeet_react_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_4__","__webpack_require__","d","_objectSpread","_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","cssModule","object","innerRef","CardBody","props","attributes","ref","CardHeader","color","prop_types_default","pill","bool","utils","node","Badge_Badge","objectWithoutPropertiesLoose","classnames_default","href","react_default","esm_extends","es_Badge","BadgePage","name","active","Row","Col","md","Card","Button","outline"],"mappings":"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","file":"static/js/15.5773cab8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n              breadcrumbs\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.object\n  \n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Badge,\n  Button,\n} from 'reactstrap';\n\nimport Page from 'components/Page';\n\nconst BadgePage = () => {\n  return (\n    <Page title=\"Badges\" breadcrumbs={[{ name: 'badges', active: true }]}>\n      <Row>\n        <Col md={6}>\n          <Card>\n            <CardHeader>Scale to parent</CardHeader>\n            <CardBody>\n              <h1>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h1>\n              <h2>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h2>\n              <h3>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h3>\n              <h4>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h4>\n              <h5>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h5>\n              <h6>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h6>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card>\n            <CardHeader>with buttons</CardHeader>\n            <CardBody>\n              <Button color=\"primary\" className=\"mr-1\">\n                Notifications <Badge color=\"secondary\">4</Badge>\n              </Button>\n              <Button color=\"info\" className=\"mr-1\">\n                Notifications <Badge color=\"danger\">4</Badge>\n              </Button>\n              <Button color=\"secondary\" className=\"mr-1\">\n                Notifications <Badge color=\"secondary\">4</Badge>\n              </Button>\n            </CardBody>\n\n            <CardBody>\n              <Button color=\"primary\" outline className=\"mr-1\">\n                Notifications <Badge color=\"primary\">4</Badge>\n              </Button>\n              <Button color=\"info\" outline className=\"mr-1\">\n                Notifications <Badge color=\"info\">4</Badge>\n              </Button>\n              <Button color=\"secondary\" outline className=\"mr-1\">\n                Notifications <Badge color=\"secondary\">4</Badge>\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={4}>\n          <Card>\n            <CardHeader>Contextual variations</CardHeader>\n            <CardBody>\n              <Badge color=\"primary\" className=\"mr-1\">\n                Primary\n              </Badge>\n              <Badge color=\"secondary\" className=\"mr-1\">\n                Secondary\n              </Badge>\n              <Badge color=\"success\" className=\"mr-1\">\n                Success\n              </Badge>\n              <Badge color=\"danger\" className=\"mr-1\">\n                Danger\n              </Badge>\n              <Badge color=\"warning\" className=\"mr-1\">\n                Warning\n              </Badge>\n              <Badge color=\"info\" className=\"mr-1\">\n                Info\n              </Badge>\n              <Badge color=\"light\" className=\"mr-1\">\n                Light\n              </Badge>\n              <Badge color=\"dark\" className=\"mr-1\">\n                Dark\n              </Badge>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <CardHeader>Pills</CardHeader>\n            <CardBody>\n              <Badge color=\"primary\" pill className=\"mr-1\">\n                Primary\n              </Badge>\n              <Badge color=\"secondary\" pill className=\"mr-1\">\n                Secondary\n              </Badge>\n              <Badge color=\"success\" pill className=\"mr-1\">\n                Success\n              </Badge>\n              <Badge color=\"danger\" pill className=\"mr-1\">\n                Danger\n              </Badge>\n              <Badge color=\"warning\" pill className=\"mr-1\">\n                Warning\n              </Badge>\n              <Badge color=\"info\" pill className=\"mr-1\">\n                Info\n              </Badge>\n              <Badge color=\"light\" pill className=\"mr-1\">\n                Light\n              </Badge>\n              <Badge color=\"dark\" pill className=\"mr-1\">\n                Dark\n              </Badge>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <CardHeader>Links</CardHeader>\n            <CardBody>\n              <Badge href=\"#\" color=\"primary\" className=\"mr-1\">\n                Primary\n              </Badge>\n              <Badge href=\"#\" color=\"secondary\" className=\"mr-1\">\n                Secondary\n              </Badge>\n              <Badge href=\"#\" color=\"success\" className=\"mr-1\">\n                Success\n              </Badge>\n              <Badge href=\"#\" color=\"danger\" className=\"mr-1\">\n                Danger\n              </Badge>\n              <Badge href=\"#\" color=\"warning\" className=\"mr-1\">\n                Warning\n              </Badge>\n              <Badge href=\"#\" color=\"info\" className=\"mr-1\">\n                Info\n              </Badge>\n              <Badge href=\"#\" color=\"light\" className=\"mr-1\">\n                Light\n              </Badge>\n              <Badge href=\"#\" color=\"dark\" className=\"mr-1\">\n                Dark\n              </Badge>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n\nexport default BadgePage;\n"],"sourceRoot":""}